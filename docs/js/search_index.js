var search_data = {"index":{"searchIndex":["gbud","projectbuilder","projectmetadata","userprompt","projectbuildertest","projectmetadatatest","authors=()","build()","confirm_input()","copy_assets()","email=()","get_value()","make_directories()","make_executable()","map_asset()","map_template()","name=()","new()","new()","prompt_user()","render()","render_templates()","setup()","setup()","test_authors_mutator()","test_description_mutator()","test_license_accessor()","test_name_mutator_negative()","test_name_mutator_positive()","test_summary_mutator()","test_to_hash()","test_validate_email_negative()","test_validate_email_positive()","test_validate_name_negative()","test_validate_name_positive()","test_validate_url_negative()","test_validate_url_positive()","test_version_accessor()","to_hash()","url=()","validate_email()","validate_name()","validate_url()","readme"],"longSearchIndex":["gbud","gbud::projectbuilder","gbud::projectmetadata","gbud::userprompt","projectbuildertest","projectmetadatatest","gbud::projectmetadata#authors=()","gbud::projectbuilder#build()","gbud::userprompt::confirm_input()","gbud::projectbuilder#copy_assets()","gbud::projectmetadata#email=()","gbud::userprompt::get_value()","gbud::projectbuilder#make_directories()","gbud::projectbuilder#make_executable()","gbud::projectbuilder#map_asset()","gbud::projectbuilder#map_template()","gbud::projectmetadata#name=()","gbud::projectbuilder::new()","gbud::projectmetadata::new()","gbud::userprompt::prompt_user()","gbud::projectbuilder#render()","gbud::projectbuilder#render_templates()","projectbuildertest#setup()","projectmetadatatest#setup()","projectmetadatatest#test_authors_mutator()","projectmetadatatest#test_description_mutator()","projectmetadatatest#test_license_accessor()","projectmetadatatest#test_name_mutator_negative()","projectmetadatatest#test_name_mutator_positive()","projectmetadatatest#test_summary_mutator()","projectmetadatatest#test_to_hash()","projectmetadatatest#test_validate_email_negative()","projectmetadatatest#test_validate_email_positive()","projectmetadatatest#test_validate_name_negative()","projectmetadatatest#test_validate_name_positive()","projectmetadatatest#test_validate_url_negative()","projectmetadatatest#test_validate_url_positive()","projectmetadatatest#test_version_accessor()","gbud::projectmetadata#to_hash()","gbud::projectmetadata#url=()","gbud::projectmetadata#validate_email()","gbud::projectmetadata#validate_name()","gbud::projectmetadata#validate_url()",""],"info":[["GBud","","GBud.html","","<p>GBud\n<p>Author &mdash; Richard Davis\n<p>Copyright &mdash; Copyright 2017 Richard Davis\n"],["GBud::ProjectBuilder","","GBud/ProjectBuilder.html","","<p>ProjectBuilder\n<p>Author &mdash; Richard Davis\n<p>Copyright &mdash; Copyright 2017 Richard Davis\n"],["GBud::ProjectMetadata","","GBud/ProjectMetadata.html","","<p>ProjectMetadata\n<p>Author &mdash; Richard Davis\n<p>Copyright &mdash; Copyright 2017 Richard Davis\n"],["GBud::UserPrompt","","GBud/UserPrompt.html","","<p>UserPrompt\n<p>Author &mdash; Richard Davis\n<p>Copyright &mdash; Copyright 2017 Richard Davis\n"],["ProjectBuilderTest","","ProjectBuilderTest.html","","<p>ProjectBuilderTest\n<p>Author &mdash; Richard Davis\n<p>Copyright &mdash; Copyright 2017 Richard Davis\n"],["ProjectMetadataTest","","ProjectMetadataTest.html","","<p>ProjectMetadataTest\n<p>Author &mdash; Richard Davis\n<p>Copyright &mdash; Copyright 2017 Richard Davis\n"],["authors=","GBud::ProjectMetadata","GBud/ProjectMetadata.html#method-i-authors-3D","(authors)","<p>Sets the author attribute\n"],["build","GBud::ProjectBuilder","GBud/ProjectBuilder.html#method-i-build","()","<p>Builds the project\n"],["confirm_input","GBud::UserPrompt","GBud/UserPrompt.html#method-c-confirm_input","()","<p>Confirms the value entered by the user\n"],["copy_assets","GBud::ProjectBuilder","GBud/ProjectBuilder.html#method-i-copy_assets","()","<p>Copies the assets\n"],["email=","GBud::ProjectMetadata","GBud/ProjectMetadata.html#method-i-email-3D","(email)","<p>Sets the email attribute\n"],["get_value","GBud::UserPrompt","GBud/UserPrompt.html#method-c-get_value","(prompt)","<p>Returns the value entered by the user\n"],["make_directories","GBud::ProjectBuilder","GBud/ProjectBuilder.html#method-i-make_directories","()","<p>Creates the project directories\n"],["make_executable","GBud::ProjectBuilder","GBud/ProjectBuilder.html#method-i-make_executable","()","<p>Flags the CLI file as executable\n"],["map_asset","GBud::ProjectBuilder","GBud/ProjectBuilder.html#method-i-map_asset","(asset)","<p>Maps each asset file to correct directory\n"],["map_template","GBud::ProjectBuilder","GBud/ProjectBuilder.html#method-i-map_template","(template)","<p>Maps each templated file to correct directory\n"],["name=","GBud::ProjectMetadata","GBud/ProjectMetadata.html#method-i-name-3D","(name)","<p>Sets the name attribute\n"],["new","GBud::ProjectBuilder","GBud/ProjectBuilder.html#method-c-new","(metadata, cli)","<p>Instantiates a ProjectBuilder object\n"],["new","GBud::ProjectMetadata","GBud/ProjectMetadata.html#method-c-new","()","<p>Instantiates a ProjectMetadata object\n"],["prompt_user","GBud::UserPrompt","GBud/UserPrompt.html#method-c-prompt_user","(prompt)","<p>Prompts the user for a value\n"],["render","GBud::ProjectBuilder","GBud/ProjectBuilder.html#method-i-render","(template)","<p>Renders the templates into files\n"],["render_templates","GBud::ProjectBuilder","GBud/ProjectBuilder.html#method-i-render_templates","()","<p>Makes the files using templates\n"],["setup","ProjectBuilderTest","ProjectBuilderTest.html#method-i-setup","()","<p>Initializes test with sample data\n"],["setup","ProjectMetadataTest","ProjectMetadataTest.html#method-i-setup","()","<p>Initializes test with sample data\n"],["test_authors_mutator","ProjectMetadataTest","ProjectMetadataTest.html#method-i-test_authors_mutator","()","<p>Tests that user-provided author list is split into an array\n"],["test_description_mutator","ProjectMetadataTest","ProjectMetadataTest.html#method-i-test_description_mutator","()","<p>Tests that the description attribute accepts assignment\n"],["test_license_accessor","ProjectMetadataTest","ProjectMetadataTest.html#method-i-test_license_accessor","()","<p>Tests that the license attribute is able to be retrieved\n"],["test_name_mutator_negative","ProjectMetadataTest","ProjectMetadataTest.html#method-i-test_name_mutator_negative","()","<p>Tests that an invalid name is not accepted\n"],["test_name_mutator_positive","ProjectMetadataTest","ProjectMetadataTest.html#method-i-test_name_mutator_positive","()","<p>Tests that a valid name is accepted\n"],["test_summary_mutator","ProjectMetadataTest","ProjectMetadataTest.html#method-i-test_summary_mutator","()","<p>Tests that the summary attribute accepts assignment\n"],["test_to_hash","ProjectMetadataTest","ProjectMetadataTest.html#method-i-test_to_hash","()","<p>Tests that project metadata is properly converted to hash\n"],["test_validate_email_negative","ProjectMetadataTest","ProjectMetadataTest.html#method-i-test_validate_email_negative","()","<p>Tests that an invalid email is rejected by validate_email\n"],["test_validate_email_positive","ProjectMetadataTest","ProjectMetadataTest.html#method-i-test_validate_email_positive","()","<p>Tests that a valid email is accepted by validate_email\n"],["test_validate_name_negative","ProjectMetadataTest","ProjectMetadataTest.html#method-i-test_validate_name_negative","()","<p>Tests that an invalid name is rejected by validate_name\n"],["test_validate_name_positive","ProjectMetadataTest","ProjectMetadataTest.html#method-i-test_validate_name_positive","()","<p>Tests that a valid name is accepted by validate_name\n"],["test_validate_url_negative","ProjectMetadataTest","ProjectMetadataTest.html#method-i-test_validate_url_negative","()","<p>Tests that an invalid URL is rejected by validate_url\n"],["test_validate_url_positive","ProjectMetadataTest","ProjectMetadataTest.html#method-i-test_validate_url_positive","()","<p>Tests that a valid URL is accepted by validate_url\n"],["test_version_accessor","ProjectMetadataTest","ProjectMetadataTest.html#method-i-test_version_accessor","()","<p>Tests that the version attribute is able to be retrieved\n"],["to_hash","GBud::ProjectMetadata","GBud/ProjectMetadata.html#method-i-to_hash","()","<p>Returns the object attributes as a hash\n"],["url=","GBud::ProjectMetadata","GBud/ProjectMetadata.html#method-i-url-3D","(url)","<p>Sets the url attribute\n"],["validate_email","GBud::ProjectMetadata","GBud/ProjectMetadata.html#method-i-validate_email","(email)","<p>Validates that the given email meets criteria\n"],["validate_name","GBud::ProjectMetadata","GBud/ProjectMetadata.html#method-i-validate_name","(name)","<p>Validates that the given name meets criteria\n"],["validate_url","GBud::ProjectMetadata","GBud/ProjectMetadata.html#method-i-validate_url","(url)","<p>Validates that the given url meets criteria\n"],["README","","README_md.html","","<p>gbud\n<p><img src=\"https://badge.fury.io/rb/gbud.svg\">\n<p>Table of Contents\n"]]}}